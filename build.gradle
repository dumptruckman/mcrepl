import org.apache.tools.ant.filters.*

buildscript {
    ext {
        kotlin_version = '1.2.10'
        plugin_version = '1.1-beta-SNAPSHOT'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

group 'com.dumptruckman.bukkit'
version "$plugin_version"

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

jar.finalizedBy shadowJar

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

repositories {
    mavenCentral()
    maven {
        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly ('org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    baseName = project.name
    classifier = null
}

processResources {
    filter ReplaceTokens, tokens: [
            "plugin_version": project.property("plugin_version").toString()
    ]
}

ext.moduleName = 'com.dumptruckman.mcrepl'

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'junit',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

test {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
        ]
        classpath = files()
    }
}